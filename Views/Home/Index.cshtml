@model IEnumerable<FuelPredictor.Models.V2.Station>

@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Liste des prix des stations au @DateTime.Now.TimeOfDay</h4>
<style>
    #Home {
        text-decoration: underline;
    }
</style>


@*<p>
    <a asp-action="Create">Create New</a>
</p>*@










@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>


<div class="container" style="margin-top:25px;">
    <!-- Left column for the map -->

    <div class="row">
        <div class="col-5">
            <div id="map" style="height: 400px;"></div>
        </div>
       </div>

    <div class="row">
        <div class="col-12">
    
    
            <div class="right">
                <div class="table-responsive">
                    <table id="stationsTable" class="table table-striped table-bordered" style="width:100%">
                        <thead>
                            <tr>
                                <th scope="col">Station</th>
                                <th scope="col">Ville</th>
                                <th scope="col">Adresse</th>
                                <th scope="col">Société</th>
                                <th scope="col">Gasoil Price</th>
                                <th scope="col">Diesel Price</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                        @*     @foreach (var item in Model)
                            {
                                <tr>
                                    
                                    <td>@Html.DisplayFor(modelItem => item.Nom)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Adresse)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Company.Nom)</td>
                                    <td>17,12</td>
                                    <td>18,2</td>
                                    <td>
                                        <a asp-controller="PrixJournaliers" class="btn btn-outline-secondary" asp-action="IndexStation" asp-route-id="@item.Id">Historique des Prix</a>
                                    </td>
                                </tr>
                            } *@
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>

   
</div>

@section scripts {


    <script src="~/lib/datatables/js/dataTables.bootstrap4.js"></script>
    <script src="~/lib/datatables/js/jquery.dataTables.js"></script>
    <script src="~/lib/datatables/js/datatables.bootstrap4.js"></script>
    <script src="~/lib/datatables/js/datatables.bootstrap4.min.js"></script> <script src="~/js/BateauxDataTable.js"></script>
    <script>
        $(document).ready(function () {
            $('#stationsTable').DataTable({
                "serverSide": true,
                "ajax": {
                    "url": "/Stations/GetStations",
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs": [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }],
                "columns": [
                    { "data": "nom", "name": "Nom", "autowidth": true },
                    { "data": "ville", "name": "Ville", "autowidth": true },
                    { "data": "adresse", "name": "Adresse", "autowidth": true },
                    { "data": "latitude", "name": "Latitude", "autowidth": true },
                    { "data": "longitude", "name": "Longitude", "autowidth": true },
                   
                    // Ajoutez d'autres colonnes si nécessaire
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `
                                                        <a href="/PrixJournaliers/IndexStation/${row.id}">Historique des Prix</a> |

                                    `;
                        }
                    }
                ]
            });
        });
    </script>
}



<script>
    var map = L.map('map').setView([33.5731, -7.5898], 13); // set initial position and zoom level for Casablanca

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Extract markers from ViewBag
    var jsModel = @Html.Raw(Json.Serialize(Model));
    console.log(jsModel)

    // Add markers for each station

    for(i in jsModel){

        item=jsModel[i]
        L.marker([item.latitude , item.longitude]).addTo(map)
        .bindPopup(item.nom+'<br>' +item.adresse)
        .openPopup();
        
    };

</script>
<script>
    function searchTable() {
        // Déclaration des variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Boucle à travers toutes les lignes et cache celles qui ne correspondent pas à la recherche
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0]; // Changez l'index si vous voulez filtrer une colonne différente
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
<style>
    /* Define a layout with two columns */


</style>






















